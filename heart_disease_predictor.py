# -*- coding: utf-8 -*-
"""Heart Disease Predictor.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Oqr5zats2hC0yyi7enNghLk3dtfbsmTK

System specifications
"""

!cat /proc/cpuinfo

"""Importing the Dependencies

"""

import numpy as np #numpy arrays
import pandas as pd #pandas are used for creating data frames(structured tables from csv files)
from sklearn.model_selection import train_test_split #split data into training and testing data
from sklearn.linear_model import LogisticRegression #model
from sklearn.metrics import accuracy_score #evaluating data

"""Data Collection and Processing"""

#Loading the csv data to a pandas data frame
heart_data= pd.read_csv('/content/data.csv')

#print first five rows of the dataset
heart_data.head()

#print last 5 rows of the dataset
heart_data.tail()

#no of rows and columns in dataset
heart_data.shape

#getting some more info about the data
heart_data.info()

#checking for missing values
heart_data.isnull().sum()

#stastical measures about the data
heart_data.describe()

#checking the distribution of target variable
heart_data['target'].value_counts()

"""1: Defective Heart
0: Healthy Heart

Splitting the Features and Target
"""

X= heart_data.drop(columns='target', axis=1)
Y=heart_data['target']

print(X)

print(Y)

"""Splitting the Data into Training and Testing Data"""

X_train,X_test,Y_train,Y_test=train_test_split(X,Y,test_size=0.2,stratify=Y,random_state=3)

print(X.shape, X_train.shape, X_test.shape)

"""Model Training

Logistic Regression
"""

model=LogisticRegression()

#training the LogisticRegression model with Training Data
model.fit(X_train,Y_train)

"""Model Evaluation

Accuracy Score
"""

#accuracy on training data
X_train_prediction=model.predict(X_train)
training_data_accuracy=accuracy_score(X_train_prediction, Y_train)

#accuracy on testing data
X_test_prediction=model.predict(X_test)
test_data_accuracy=accuracy_score(X_test_prediction, Y_test)

print('Accuracy on Training Data: ',training_data_accuracy)

print('Accuracy on Test Data: ',test_data_accuracy)

"""Building a Predictive System"""

input_data=(46,1,0,120,249,0,0,144,0,0.8,2,0,3)

#change the input data to a numpy array
input_data_as_numpy_array=np.asarray(input_data)

#reshape the numpy array as we are predicting for only one instance
input_data_reshaped=input_data_as_numpy_array.reshape(1,-1)

prediction= model.predict(input_data_reshaped)
print(prediction)

if(prediction[0]==0):
  print('The person does not have a heart disease')
else:
  print('The person has a heart disease')

